//go:build ignore

package main

import (
	"bufio"
	_ "embed"
	"os"
	"regexp"
	"strings"
	"text/template"
)

//go:embed grok-patterns
var grokPatterns string

const baseTemplate = `// Code generated by gen.go; DO NOT EDIT.

package grok

func NewBase() Host {
	h := New(){{range .}}{{print "\n\t"}}h.Must({{printf "%q" .Name}}, {{printf "%q" .Pattern}}){{end}}
	return h
}
`

func must(err error) {
	if err != nil {
		panic(err)
	}
}

func main() {
	type namedPattern struct{ Name, Pattern string }
	var patterns []namedPattern
	lineRegexp := regexp.MustCompile(`^(\w+)\s+(.+)$`)
	scanner := bufio.NewScanner(strings.NewReader(grokPatterns))
	for scanner.Scan() {
		if sub := lineRegexp.FindStringSubmatch(scanner.Text()); sub != nil {
			patterns = append(patterns, namedPattern{Name: sub[1], Pattern: sub[2]})
		}
	}
	must(scanner.Err())
	f, err := os.Create("base.go")
	must(err)
	defer f.Close()
	t := template.Must(template.New("base").Parse(baseTemplate))
	must(t.Execute(f, patterns))
}
